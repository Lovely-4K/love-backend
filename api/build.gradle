plugins {
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

configurations {
    asciidoctorExt
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation group: 'org.springframework.retry', name: 'spring-retry', version: '2.0.4'

    // HATEOAS
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'


    // AWS
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // rest docs
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'


    // spring security
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // sprint security test
    testImplementation 'org.springframework.security:spring-security-test'

    // actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // prometheus
    implementation 'io.micrometer:micrometer-registry-prometheus'

    //JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    //Resize Image
    implementation 'org.imgscalr:imgscalr-lib:4.2'




}

ext { // 전역 변수
    snippetsDir = file('build/generated-snippets')
}

test {
    jvmArgs '-Duser.timezone=Asia/Seoul'
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    configurations 'asciidoctorExt'
    baseDirFollowsSourceFile()
    inputs.dir snippetsDir
    dependsOn test
    outputDir file('build/docs/asciidoc')
}

bootJar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}") {
        into "static/docs"
    }
}

version '1.0.1-SNAPSHOT-'+new Date().format("yyyyMMddHHmmss")

jar.enabled=false