plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'org.sonarqube' version '4.3.1.3277'
}

group = 'com.lovely-4k'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

// 루트 프로젝트는 jar 파일을 만들 필요가 없기 때문에 false로 설정
bootJar {
    enabled = false
}

sonar {
    properties {
        property "sonar.projectKey", "Lovely-4K_love-backend"
        property "sonar.organization", "lovely-4k"
        property "sonar.host.url", "https://sonarcloud.io"
        property 'sonar.coverage.exclusions', '**/*Request.java, **/*Response.java, **/docs, **/utils, **/*Config*.java, **/resources/**, **/*Exception*.java'
        property 'sonar.exclusions', '**/*ApplicationTest*.java'
    }
}

subprojects {
    group = 'com.lovely4k'
    version = '0.0.1-SNAPSHOT'

    java {
        sourceCompatibility = '17'
    }

    apply plugin: 'java'
    apply plugin: 'java-library' //하위 모듈이 상위 모듈의 라이브러리를 의존할 수 있게 하는 플러그인
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'jacoco'
    apply plugin: 'org.sonarqube' //하위 모듈에 전부 소나클라우드 적용

    sonar {
        properties {
            property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
        }
    }

    test {
        useJUnitPlatform()
        finalizedBy jacocoTestReport
    }

    jacocoTestReport {
        reports {
            xml.required = true
        }

        afterEvaluate {
            classDirectories.setFrom(files(classDirectories.files.collect {
                fileTree(dir: it, exclude: ['**/*Request.class', '**/*Response.class'])
            }))
        }
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'com.tngtech.archunit:archunit-junit5:1.1.0'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    repositories {
        mavenCentral()
    }

    //ide에 코틀린 플러그인이 적용되어 있어 설정함
    tasks.register("prepareKotlinBuildScriptModel") {}
}

// api 모듈은 common 모듈에 의존
project(':api') {
    dependencies {
        implementation project(':common')
    }
}

// model 모듈은 common 모듈에 의존
project(':model') {
    dependencies {
        implementation project(':common')
    }
}

// api 모듈은 model 모듈에 의존
project(':api') {
    dependencies {
        implementation project(':model')
    }
}
